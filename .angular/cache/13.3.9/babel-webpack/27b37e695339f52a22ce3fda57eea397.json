{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor( // private angularFireAuth: AngularFireAuth,\n    // private auth: Auth,\n    router) {\n      this.router = router;\n      this.isLoggedIn = new Subject();\n      this.error = new Subject();\n    } // initAuthListener() {\n    //   this.angularFireAuth.authState.subscribe(user => {\n    //     if (user) {\n    //       this.userID = user.uid;\n    //       this.isAuthenticated = true;\n    //       this.isLoggedIn.next(true);\n    //       this.router.navigate(['/dashboard']);\n    //     } else {\n    //       this.isAuthenticated = false;\n    //       this.isLoggedIn.next(false);\n    //       this.router.navigate(['']);\n    //     }\n    //   });\n    // }\n    // getUserID() {\n    //   return this.userID;\n    // }\n    // registerUser(authData: IAuthData) {\n    //   return createUserWithEmailAndPassword(\n    //     this.auth,\n    //     authData.email,\n    //     authData.password\n    //   );\n    // }\n    // userSignin(authData: IAuthData) {\n    //   return signInWithEmailAndPassword(\n    //     this.auth,\n    //     authData.email,\n    //     authData.password\n    //   );\n    // }\n    // userSignout() {\n    //   signOut(this.auth);\n    // }\n\n\n    isAuth() {\n      return this.isAuthenticated;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}