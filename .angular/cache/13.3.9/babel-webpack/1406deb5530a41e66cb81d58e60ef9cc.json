{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./languages.service\";\nimport * as i2 from \"../../services/snippets.service\";\nimport * as i3 from \"../../services/snippet-data.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/checkbox\";\nimport * as i11 from \"@angular/material/button\";\n\nfunction SnippetEditComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const language_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", language_r7.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", language_r7.name, \" \");\n  }\n}\n\nfunction SnippetEditComponent_mat_hint_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 26);\n    i0.ɵɵtext(1, \" Set to Private \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SnippetEditComponent_mat_hint_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 27)(1, \"i\");\n    i0.ɵɵtext(2, \"If you do not mark private, \");\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵtext(4, \" this code will be viewable \");\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵtext(6, \" by all Code Scissor Members \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction SnippetEditComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"span\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 11);\n    i0.ɵɵlistener(\"click\", function SnippetEditComponent_div_31_Template_a_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const i_r9 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onRemoveTag(i_r9);\n    });\n    i0.ɵɵelementStart(4, \"i\", 12);\n    i0.ɵɵtext(5, \"delete_forever\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const tag_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tag_r8);\n  }\n}\n\nexport let SnippetEditComponent = /*#__PURE__*/(() => {\n  class SnippetEditComponent {\n    constructor(langService, snipService, snipDataService) {\n      this.langService = langService;\n      this.snipService = snipService;\n      this.snipDataService = snipDataService;\n      this.addedNewInput = 0;\n      this.code = '<p></p>';\n      this.editMode = false;\n      this.editorOptions = {\n        theme: 'vs-dark',\n        language: 'html'\n      };\n      this.languageSet = false;\n      this.otherTags = [];\n      this.privacySetting = false;\n    }\n\n    ngOnInit() {\n      this.currentSnippet = this.snipDataService.getSnippet();\n      if (this.currentSnippet) this.displaySnippet();\n      this.languages = this.langService.getLanguages();\n    }\n\n    ngAfterViewChecked() {\n      if (this.currentSnippet && !this.languageSet) {\n        this.checkForEditor();\n      }\n    }\n\n    checkForEditor() {\n      this.languageSet = true;\n      this.handleSetLanguage(this.currentLanguage);\n    }\n\n    displaySnippet() {\n      this.editMode = true;\n      this.initCode();\n    }\n\n    onChangePrivacy() {\n      this.privacySetting = !this.privacySetting;\n    }\n\n    handleSetLanguage(newLang) {\n      let curLanguage = '';\n      let editorNotPresent = false;\n\n      if (newLang.value) {\n        this.currentLanguage = newLang.value;\n        curLanguage = this.currentLanguage;\n      } else curLanguage = this.currentLanguage;\n\n      if (window['monaco']) {\n        if (window['monaco'].editor.getModels()[0]) {\n          editorNotPresent = false;\n          window['monaco'].editor.setModelLanguage(window['monaco'].editor.getModels()[0], curLanguage);\n        } else {\n          editorNotPresent = true;\n        }\n      } else {\n        editorNotPresent = true;\n      }\n\n      if (editorNotPresent) {\n        setTimeout(() => {\n          this.languageSet = false;\n          this.checkForEditor();\n        }, 2000);\n      }\n    }\n\n    addTag(tag) {\n      this.otherTags.push(tag.value);\n    }\n\n    onRemoveTag(index) {\n      this.otherTags.splice(index, 1);\n    }\n\n    oncodeTagsSubmit(snippet) {\n      const newSnip = {\n        name: snippet.value.snippetname,\n        other_tags: this.otherTags || null,\n        code: this.code,\n        language: snippet.value.language,\n        favorite: false,\n        private: snippet.value.private || false\n      };\n\n      if (this.editMode) {\n        newSnip.id = this.currentSnippet.id;\n\n        if (this.currentSnippet.language !== snippet.value.language) {\n          newSnip.other_tags.push(snippet.value.language);\n        }\n\n        this.snipService.updateSnippet(newSnip);\n      } else {\n        newSnip.other_tags.push(snippet.value.language);\n        this.snipService.createdNewSnippet(newSnip);\n      }\n    }\n\n    initCode() {\n      this.tag = '';\n      this.otherTags = [];\n      this.snippetname = '';\n      this.code = '';\n\n      if (this.editMode) {\n        this.currentLanguage = this.currentSnippet.language;\n        this.otherTags = this.currentSnippet.other_tags;\n        this.snippetname = this.currentSnippet.name;\n        this.code = this.currentSnippet.code;\n        this.privacySetting = this.currentSnippet.private;\n      }\n    }\n\n    ngOnDestroy() {\n      this.editMode = false;\n      this.languageSet = false;\n      this.currentSnippet = null;\n      this.snipDataService.clear();\n    }\n\n  }\n\n  SnippetEditComponent.ɵfac = function SnippetEditComponent_Factory(t) {\n    return new (t || SnippetEditComponent)(i0.ɵɵdirectiveInject(i1.LanguagesService), i0.ɵɵdirectiveInject(i2.SnippetsService), i0.ɵɵdirectiveInject(i3.SnippetDataService));\n  };\n\n  SnippetEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SnippetEditComponent,\n    selectors: [[\"app-snippet-edit\"]],\n    decls: 34,\n    vars: 7,\n    consts: [[\"id\", \"editor-div\"], [1, \"row\"], [1, \"col-xs-6\", \"col-md-6\"], [\"id\", \"formSection\"], [\"fxLayout\", \"column\", 3, \"ngSubmit\"], [\"codeTags\", \"ngForm\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Name For Snippet\", \"ngModel\", \"\", \"name\", \"snippetname\", \"snippetname\", \"\", \"value\", \"snippetname\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"languageSelect\", \"placeholder\", \"Choose an Language\", \"ngModel\", \"\", \"name\", \"language\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"name\", \"language.value\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"tag\", \"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Add Addition Tags\", \"ngModel\", \"\", \"tag\", \"\", 2, \"width\", \"268px\"], [\"tag\", \"\"], [3, \"click\"], [1, \"material-icons\"], [\"id\", \"checkBox\"], [\"matInput\", \"\", \"ngModel\", \"\", \"name\", \"private\", \"private\", \"\", 3, \"change\"], [\"private\", \"\"], [\"id\", \"privacy-hint_Private\", \"class\", \"privacy-hint\", 4, \"ngIf\"], [\"id\", \"privacy-hint_Public\", \"class\", \"privacy-hint\", 4, \"ngIf\"], [1, \"row\", \"button-row\"], [1, \"col-xs-12\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\"], [1, \"col-lg-6\", \"tag-div\", 2, \"margin\", \"auto\"], [\"fxLayoutAlign\", \"center\", \"fxLayoutGap\", \"10px\"], [\"class\", \"tagDiv\", 4, \"ngFor\", \"ngForOf\"], [1, \"editor-words\"], [\"name\", \"language.value\", 3, \"value\"], [\"id\", \"privacy-hint_Private\", 1, \"privacy-hint\"], [\"id\", \"privacy-hint_Public\", 1, \"privacy-hint\"], [1, \"tagDiv\"], [1, \"tagSpan\"]],\n    template: function SnippetEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r12 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"section\", 3)(4, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function SnippetEditComponent_Template_form_ngSubmit_4_listener() {\n          i0.ɵɵrestoreView(_r12);\n\n          const _r0 = i0.ɵɵreference(5);\n\n          return ctx.oncodeTagsSubmit(_r0);\n        });\n        i0.ɵɵelementStart(6, \"mat-form-field\")(7, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function SnippetEditComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.snippetname = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"mat-select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function SnippetEditComponent_Template_mat_select_ngModelChange_9_listener($event) {\n          return ctx.currentLanguage = $event;\n        })(\"change\", function SnippetEditComponent_Template_mat_select_change_9_listener($event) {\n          return ctx.handleSetLanguage($event);\n        });\n        i0.ɵɵtemplate(10, SnippetEditComponent_mat_option_10_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"mat-form-field\");\n        i0.ɵɵelement(12, \"input\", 9, 10);\n        i0.ɵɵelementStart(14, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function SnippetEditComponent_Template_a_click_14_listener() {\n          i0.ɵɵrestoreView(_r12);\n\n          const _r2 = i0.ɵɵreference(13);\n\n          return ctx.addTag(_r2);\n        });\n        i0.ɵɵelementStart(15, \"i\", 12);\n        i0.ɵɵtext(16, \"add_circle\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(17, \"span\");\n        i0.ɵɵelementStart(18, \"span\", 13)(19, \"mat-checkbox\", 14, 15);\n        i0.ɵɵlistener(\"change\", function SnippetEditComponent_Template_mat_checkbox_change_19_listener() {\n          return ctx.onChangePrivacy();\n        });\n        i0.ɵɵtext(21, \" Make Snippet Private? \");\n        i0.ɵɵtemplate(22, SnippetEditComponent_mat_hint_22_Template, 2, 0, \"mat-hint\", 16);\n        i0.ɵɵtemplate(23, SnippetEditComponent_mat_hint_23_Template, 7, 0, \"mat-hint\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 18)(25, \"div\", 19)(26, \"button\", 20);\n        i0.ɵɵtext(27, \"SAVE SNIPPET\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(28, \"div\", 21)(29, \"div\")(30, \"section\", 22);\n        i0.ɵɵtemplate(31, SnippetEditComponent_div_31_Template, 6, 1, \"div\", 23);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(32, \"span\", 24);\n        i0.ɵɵtext(33, \" Enter Your Code Snippet Below:*\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(5);\n\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.snippetname);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentLanguage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.languages);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.privacySetting);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.privacySetting);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.otherTags);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i5.MatFormField, i6.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i4.RequiredValidator, i7.MatSelect, i8.NgForOf, i9.MatOption, i10.MatCheckbox, i8.NgIf, i5.MatHint, i11.MatButton],\n    styles: [\"#editor-div[_ngcontent-%COMP%]{background:white;position:relative;height:1100px;border:1px solid silver;width:95%;margin:0 auto}form[_ngcontent-%COMP%]{margin-left:5em;margin-top:2em}#formSection[_ngcontent-%COMP%]{margin-bottom:7em}mat-form-field[_ngcontent-%COMP%]{font-family:Montserrat!important;width:500px}.overflow-guard[_ngcontent-%COMP%], .mini-map.slider-mouseover[_ngcontent-%COMP%], .minimap-slider[_ngcontent-%COMP%]{height:100%!important}#languageSelect[_ngcontent-%COMP%]{padding-bottom:1.15em}mat-checkbox[_ngcontent-%COMP%]{position:relative}.editor-words[_ngcontent-%COMP%]{margin-left:5em;position:relative;bottom:1.5em;letter-spacing:3px;font-weight:600}.button-row[_ngcontent-%COMP%]{position:absolute;bottom:-600px;right:-54px}.button-row[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:250px;padding:5px;letter-spacing:3px;background:#736acb;color:#fff}.tagDiv[_ngcontent-%COMP%]{margin-right:10px;width:150px;padding:6px;text-transform:uppercase;border:1px solid #68a7bb;background:#68a7bb;color:#fff;letter-spacing:2px}.tagDiv[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{float:right}#checkBox[_ngcontent-%COMP%]{position:absolute;min-height:100px;min-width:380px;overflow:-webkit-paged-x;bottom:-645px;left:118px;margin-right:0!important}#checkBox[_ngcontent-%COMP%]   #privacy-hint_Public[_ngcontent-%COMP%], #checkBox[_ngcontent-%COMP%]   #privacy-hint_Private[_ngcontent-%COMP%]{position:absolute;top:18px;left:2px;font-size:14px;color:#6495ed;line-height:21px}@media (max-width: 400px){#checkBox[_ngcontent-%COMP%]{bottom:-841px;left:34px}.button-row[_ngcontent-%COMP%]{bottom:-900px;left:72px}}@media (max-width: 505px){.editor-words[_ngcontent-%COMP%]{margin-left:1em}}@media (min-width: 400px) and (max-width: 530px){#checkBox[_ngcontent-%COMP%]{left:38px;bottom:-815px}.button-row[_ngcontent-%COMP%]{bottom:-833px;right:0;left:25%}}@media (min-width: 531px) and (max-width: 750px){#checkBox[_ngcontent-%COMP%]{bottom:-815px}.button-row[_ngcontent-%COMP%]{bottom:-850px;right:0;left:0}.button-row[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{position:relative;left:100%}}@media (min-width: 751px) and (max-width: 767px){.button-row[_ngcontent-%COMP%]{left:50%}.button-row[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{position:relative;left:-50%}}@media (min-width: 751px) and (max-width: 991px){#checkBox[_ngcontent-%COMP%]{bottom:-815px}.button-row[_ngcontent-%COMP%]{bottom:-850px}}@media (min-width: 992px) and (max-width: 1150px){.button-row[_ngcontent-%COMP%]{bottom:-676px}}@media (min-width: 992px) and (max-width: 2300px){#checkBox[_ngcontent-%COMP%]{bottom:-683px}.button-row[_ngcontent-%COMP%]{bottom:-645px}}@media (min-width: 2301px){#checkBox[_ngcontent-%COMP%]{bottom:-717px}.button-row[_ngcontent-%COMP%]{bottom:-685px}}@media (max-width: 690px){.mat-form-field-infix[_ngcontent-%COMP%]{width:100%}mat-form-field[_ngcontent-%COMP%]{width:75%}.monaco-editor[_ngcontent-%COMP%], .monaco-editor[_ngcontent-%COMP%]   .inputarea.ime-input[_ngcontent-%COMP%]{color:#d4d4d4;height:464px}}@media (max-width: 991px){#editor-div[_ngcontent-%COMP%]{height:1260px}#formSection[_ngcontent-c15][_ngcontent-%COMP%]{margin-bottom:2em}.tag-div[_ngcontent-%COMP%]{height:200px}}\"]\n  });\n  return SnippetEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}