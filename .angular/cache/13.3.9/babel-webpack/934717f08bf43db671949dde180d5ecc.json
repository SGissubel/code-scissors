{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../login/auth.service\";\nexport let SnippetsService = /*#__PURE__*/(() => {\n  class SnippetsService {\n    constructor( // private db: AngularFirestore,\n    router, authService) {\n      this.router = router;\n      this.authService = authService;\n      this.snippetsAdded = new Subject();\n      this.snippetsExist = new Subject();\n      this.snippetsAll = []; // this.userID = this.authService.getUserID();\n    }\n\n    fetchAvailableSnippets() {}\n\n    createdNewSnippet(snippet) {\n      this.storeNewSnippet(snippet);\n    }\n\n    fetchCreatedSnippets() {\n      this.snippetsAll = []; // this.db\n      //   .collection('snippets')\n      //   .doc(this.userID)\n      //   .collection('user-snippets')\n      //   .snapshotChanges()\n      //   .map(results => {\n      //     return results.map((snippet) => {\n      //       return {\n      //         id: snippet.payload.doc.id,\n      //           name: snippet.payload.doc.data().name,\n      //           code: snippet.payload.doc.data().code,\n      //           other_tags: snippet.payload.doc.data().other_tags,\n      //           created_at: snippet.payload.doc.data().created_at,\n      //           language: snippet.payload.doc.data().language,\n      //           isprivate: snippet.payload.doc.data().private,\n      //           favorite: snippet.payload.doc.data().favorite\n      //         };\n      //     });\n      //   })\n      //   .subscribe(result => {\n      //     this.snippetsAll.push(result);\n      //     if (result) this.snippetsExist.next(true);\n      //     this.snippetsAdded.next(this.snippetsAll);\n      //   });\n    }\n\n    updateSnippet(snippet) {\n      const selectedSnip = snippet.id; // this.db.doc<any>(`snippets/${this.userID}/user-snippets/${selectedSnip}`)\n      //   .update(snippet);\n\n      this.returnToDash();\n    }\n\n    deleteSnippet(snippet) {\n      const that = this; // this.db.collection('snippets')\n      //   .doc(this.userID)\n      //   .collection('user-snippets')\n      //   .doc(snippet.id)\n      //   .delete().then(function() {\n      //     that.fetchCreatedSnippets();\n      //     console.log(\"Document successfully deleted!\");\n      //   }).catch(function(error) {\n      //     console.error(\"Error removing document: \", error);\n      //   });\n    }\n\n    storeNewSnippet(snippet) {\n      // const itemId = this.db.createId();\n      // const createdAt = firebase.firestore.FieldValue.serverTimestamp();\n      // const item = { ...snippet, id: itemId, created_at: createdAt};\n      // this.db.collection('snippets')\n      //   .doc(this.userID)\n      //   .collection('user-snippets')\n      //   .add(item);\n      if (!snippet.private) {\n        this.storePublicSnippet(snippet);\n      } else {\n        this.returnToDash();\n      }\n    }\n\n    storePublicSnippet(snippet) {\n      // this.db.collection('snippets').doc('public_snippets').collection('snippets').add(snippet);\n      this.returnToDash();\n    }\n\n    returnToDash() {\n      this.router.navigate(['dashboard']);\n    }\n\n  }\n\n  SnippetsService.ɵfac = function SnippetsService_Factory(t) {\n    return new (t || SnippetsService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n  };\n\n  SnippetsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SnippetsService,\n    factory: SnippetsService.ɵfac\n  });\n  return SnippetsService;\n})();","map":null,"metadata":{},"sourceType":"module"}