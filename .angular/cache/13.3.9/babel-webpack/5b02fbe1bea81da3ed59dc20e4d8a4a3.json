{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../shared/ui.service\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(router, // private afAuth: AngularFireAuth,\n    // private db: AngularFirestore,\n    uiService) {\n      this.router = router;\n      this.uiService = uiService;\n      this.isLoggedIn = new Subject();\n      this.error = new Subject();\n    }\n\n    initAuthListener() {// this.afAuth.authState.subscribe(user => {\n      //   if (user) {\n      //     this.userID = user.uid;\n      //     this.isAuthenticated = true;\n      //     this.isLoggedIn.next(true);\n      //     this.router.navigate(['/dashboard']);\n      //   } else {\n      //     this.isAuthenticated = false;\n      //     this.isLoggedIn.next(false);\n      //     this.router.navigate(['']);\n      //   }\n      // });\n    }\n\n    getUserID() {\n      return this.userID;\n    }\n\n    registerUser(authData) {// this.afAuth.auth.createUserWithEmailAndPassword(\n      //   authData.email,\n      //   authData.password\n      // ).then(result => {\n      // })\n      //   .catch(error => {\n      //     this.uiService.showSnackbar(error.message, null, 3000);\n      //   });\n    }\n\n    userSignin(authData) {// this.afAuth.auth.signInWithEmailAndPassword(\n      //   authData.email,\n      //   authData.password\n      // ).then(result => {\n      // })\n      //   .catch(error => {\n      //     this.uiService.showSnackbar(error.message, null, 3000);\n      //   });\n    }\n\n    userSignout() {// this.afAuth.auth.signOut();\n    }\n\n    isAuth() {\n      return this.isAuthenticated;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.UIService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}